{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ria\\\\Documents\\\\DH\\\\examen\\\\final-Franco-Delgado\\\\fe3-final\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from \"react\";\nimport { createTheme, ThemeProvider } from \"@mui/system\";\nimport { green, blue } from \"@mui/material/colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialState = {\n  theme: \"light\",\n  data: [],\n  favoritos: [],\n  flag: true\n};\nexport const ContextGlobal = /*#__PURE__*/createContext(undefined);\n\nconst funcionReduc = (state, action) => {\n  switch (action.type) {\n    case \"data\":\n      return { ...state,\n        data: action.paylaod\n      };\n\n    case \"favoritos\":\n      return { ...state,\n        favoritos: action.paylaod\n      };\n\n    case \"flag\":\n      return { ...state,\n        flag: action.paylaod\n      };\n\n    case \"theme\":\n      return { ...state,\n        theme: action.paylaod\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const [state, dispach] = useReducer(funcionReduc, initialState);\n  const tema = createTheme({\n    primaryColor: {\n      main: state.theme === \"light\" ? green : blue\n    },\n    secundaryColor: {\n      main: green\n    }\n  });\n  const stateAndDispach = {\n    state,\n    dispach\n  };\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: {\n      stateAndDispach\n    },\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: tema,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: state.theme,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"uQxAdYq5lPRPdgmkmLbdSLTcgWU=\");\n\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useReducer","createTheme","ThemeProvider","green","blue","initialState","theme","data","favoritos","flag","ContextGlobal","undefined","funcionReduc","state","action","type","paylaod","ContextProvider","children","dispach","tema","primaryColor","main","secundaryColor","stateAndDispach"],"sources":["C:/Users/Ria/Documents/DH/examen/final-Franco-Delgado/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import { createContext, useReducer } from \"react\";\r\nimport { createTheme, ThemeProvider } from \"@mui/system\";\r\nimport { green, blue } from \"@mui/material/colors\";\r\n\r\nexport const initialState = {theme: \"light\", data: [], favoritos : [], flag : true}\r\n\r\nexport const ContextGlobal = createContext(undefined);\r\n\r\nconst funcionReduc = (state, action) => {\r\n\r\nswitch(action.type) {\r\n\r\n  case \"data\":\r\n  return{...state, data: action.paylaod}\r\n\r\n  case \"favoritos\":\r\n  return{...state, favoritos: action.paylaod}\r\n\r\n  case \"flag\":\r\n  return{...state, flag: action.paylaod}\r\n\r\n  case \"theme\":\r\n  return{...state, theme: action.paylaod}\r\n  \r\n  default: return state\r\n  }\r\n}\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\r\n\r\n  const [state, dispach] = useReducer(funcionReduc, initialState)\r\n\r\n  const tema = createTheme ({\r\n    primaryColor : {\r\n      main : state.theme === \"light\" ? green : blue,\r\n    },\r\n    secundaryColor : {\r\n      main : green\r\n    },\r\n  })\r\n\r\n  const stateAndDispach = {\r\n    state, dispach\r\n  }\r\n\r\n  return (\r\n    <ContextGlobal.Provider value={{stateAndDispach}}>\r\n      <ThemeProvider theme = {tema}>\r\n        <div className={state.theme}>\r\n          {children}\r\n        </div>\r\n      </ThemeProvider>\r\n    </ContextGlobal.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,aAA3C;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,sBAA5B;;AAEA,OAAO,MAAMC,YAAY,GAAG;EAACC,KAAK,EAAE,OAAR;EAAiBC,IAAI,EAAE,EAAvB;EAA2BC,SAAS,EAAG,EAAvC;EAA2CC,IAAI,EAAG;AAAlD,CAArB;AAEP,OAAO,MAAMC,aAAa,gBAAGX,aAAa,CAACY,SAAD,CAAnC;;AAEP,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EAExC,QAAOA,MAAM,CAACC,IAAd;IAEE,KAAK,MAAL;MACA,OAAM,EAAC,GAAGF,KAAJ;QAAWN,IAAI,EAAEO,MAAM,CAACE;MAAxB,CAAN;;IAEA,KAAK,WAAL;MACA,OAAM,EAAC,GAAGH,KAAJ;QAAWL,SAAS,EAAEM,MAAM,CAACE;MAA7B,CAAN;;IAEA,KAAK,MAAL;MACA,OAAM,EAAC,GAAGH,KAAJ;QAAWJ,IAAI,EAAEK,MAAM,CAACE;MAAxB,CAAN;;IAEA,KAAK,OAAL;MACA,OAAM,EAAC,GAAGH,KAAJ;QAAWP,KAAK,EAAEQ,MAAM,CAACE;MAAzB,CAAN;;IAEA;MAAS,OAAOH,KAAP;EAdX;AAgBC,CAlBD;;AAoBA,OAAO,MAAMI,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/C;EAEA,MAAM,CAACL,KAAD,EAAQM,OAAR,IAAmBnB,UAAU,CAACY,YAAD,EAAeP,YAAf,CAAnC;EAEA,MAAMe,IAAI,GAAGnB,WAAW,CAAE;IACxBoB,YAAY,EAAG;MACbC,IAAI,EAAGT,KAAK,CAACP,KAAN,KAAgB,OAAhB,GAA0BH,KAA1B,GAAkCC;IAD5B,CADS;IAIxBmB,cAAc,EAAG;MACfD,IAAI,EAAGnB;IADQ;EAJO,CAAF,CAAxB;EASA,MAAMqB,eAAe,GAAG;IACtBX,KADsB;IACfM;EADe,CAAxB;EAIA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE;MAACK;IAAD,CAA/B;IAAA,uBACE,QAAC,aAAD;MAAe,KAAK,EAAIJ,IAAxB;MAAA,uBACE;QAAK,SAAS,EAAEP,KAAK,CAACP,KAAtB;QAAA,UACGY;MADH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CA3BM;;GAAMD,e;;KAAAA,e"},"metadata":{},"sourceType":"module"}